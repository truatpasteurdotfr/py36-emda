""""
Plot spherical harmonics generated by ProSHADE program.
Change the data input and run in Python.
Plot is 3D interactive.

v1: 20.08.2021
"""

import numpy as np
import math
import pickle


def get_data(datafile):
    # read pickle data output from proshade
    pkl_file = open(datafile, 'rb')
    data1 = pickle.load(pkl_file)
    pkl_file.close()
    return data1


def get_rmsd(data):
    # calculate map-rmsd
    diff = data - np.mean(data)
    return math.sqrt(np.mean(diff * diff))


def plot3d(data, i):
    # plot data in spherical coordinates
    from matplotlib import cm
    import matplotlib.pyplot as plt

    n, m = data.shape

    # Meshing a unit sphere according to n, m 
    theta = np.linspace(0, 2 * np.pi, num=n)
    phi = np.linspace(-np.pi/2, np.pi/2, num=m)
    theta, phi = np.meshgrid(theta, phi)
    # NOTE: phi angle follows MATLAB convention
    x, y, z = np.cos(phi)*np.cos(theta), np.cos(phi)*np.sin(theta), np.sin(phi)

    # data normalization
    # normalized to min-max: does not give enough contrast in the figure
    #fmax, fmin = data.max(), data.min()
    #data = (data - fmin)/(fmax - fmin)

    data = data/np.mean(data) # normalize to mean for good contrast 

    fig = plt.figure(figsize=plt.figaspect(1.))
    ax = fig.gca(projection='3d')
    ax.set_proj_type('ortho')
    ax.plot_surface(x, y, z,
                       rstride=3, cstride=3, facecolors=cm.Blues(data))
    # colobar for facecolors
    mappable = plt.cm.ScalarMappable(cmap=cm.Blues)
    mappable.set_array(data)
    plt.colorbar(mappable, fraction=0.025, pad=0.04)
    #
    ax.view_init(azim=0., elev=90.)
    ax.set_box_aspect((1, 1, 1))
    ax.axis('off')
    title = 'ProShade Spherical harmonics: shell-%i' %i
    plt.title(title)
    plt.show()



if __name__ == "__main__":

    datafile = '/Users/ranganaw/MRC/sphere_plot/data.pkl'

    data = get_data(datafile)
    for i in range(data.shape[0]):
        plot3d(data[i,:,:], i)
